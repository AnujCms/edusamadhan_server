{"version":3,"sources":["views/AuthenticatedPage.jsx","components/FormikValidatedComponents/CheckBox.jsx","views/LoginPage/FirstTimeLogin.jsx"],"names":["AuthenticatedPage","Component","withUser","withRouter","_React$Component","withAuthorization","_getPrototypeOf2","_this","Object","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","length","args","Array","_key","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","concat","state","isError","makeAuthenticatedAPICall","_ref","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","method","url","data","result","_result","wrap","_context","prev","next","axios","headers","x-access-token","localStorage","getItem","sent","status","abrupt","setState","t0","response","props","currentUser","refreshTokens","t1","console","log","stop","_x","_x2","_x3","getRedirectQueryString","redirectTo","qs","queryString","stringify","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","userObj","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","location","pathname","assign","loggedInUserObj","authenticatedApiCall","React","tieAuthorization","CheckBox","field","form","helperText","name","checkboxProps","error","_ref$displayErrorMess","displayErrorMessage","otherProps","objectWithoutProperties","checkProps","onChange","checked","onBlur","otherCheckBoxProps","touch","getIn","touched","errorText","errors","react_default","Fragment","FormControlLabel","control","Checkbox","event","setFieldValue","setFieldTouched","FormHelperText","Boolean","FirstTimeLogin","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleSubmit","_ref2","asyncToGenerator","regenerator_default","values","setSubmitting","password","cnfpassword","then","removeItem","resetPassworSuccess","unauthenticated","catch","dismissDialog","history","replace","logout","_callee2","_context2","push","handleFirstTimeLogin","handleShowPassword","showPassword","handleHidePassword","handleShowConfPassword","confPassword","showCnfPassword","handleHideConfPassword","handleTermCondition","_callee3","_context3","window","open","handlePrivacyPolicy","t","formikValidation","object","shape","string","required","min","matches","oneOf","ref","language","i18n","_this2","_this$props","classes","firstTimeLoginButton","Button","className","errorBtn","onClick","Helmet","GridContainer","style","backgroundColor","marginBottom","GridItem","lg","md","sm","xs","login","formik_esm","initialValues","defineProperty","acceptTerms","termCondition","onSubmit","validationSchema","Typography","cardHeading","component","FormikTextField","label","handleChange","fullWidth","variant","inputItem","InputProps","type","endAdornment","InputAdornment","position","Visibility_default","icnColor","VisibilityOff_default","color","FormikCheckBox","fntSz_16","TermsCondition","textAlign","disabled","primaryBtn","size","Card","boxShadow","CardBody","LoginHeading","loginSuccess","CardFooter","cardFooter","ErrorDialog","successButton","HeaderText","dismiss","withTranslation","withStyles","theme","palette","text","textPrimaryColor","primary","main","border","primaryBorder","width","borderRadius","padding","marginTop","&:hover","hoverPrimaryColor","hoverTextPrimaryColor","hoverPrimaryBorder","margin","fontWeight","lineHeight","textDecoration","cursor","fontSize","marginLeft","breakpoints","down","paddingTop","padTop","clrWhite","fntSze20","LoginSubHeading","justifyContent","paddingBottom","withTheme"],"mappings":"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","file":"static/js/14.bfcf2e0c.chunk.js","sourcesContent":["import  React from \"react\";\r\nimport withUser from '../views/LoginPage/WithUser';\r\nimport _ from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router\";\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction tieAuthorization(Component) {\r\n  return class withAuthorization extends React.Component {\r\n    state = { isError: false }\r\n    makeAuthenticatedAPICall = async (method, url, data) => {\r\n      try {\r\n        try {\r\n          let result = await axios({\r\n            method: method,\r\n            url: url,\r\n            headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n            data: data\r\n          });\r\n          if (result.status === 200) {\r\n            return result;\r\n          }\r\n          else {\r\n            this.setState({ isError: true })\r\n          }\r\n        }\r\n        catch (error) {\r\n          if (error.response.status = 401) {\r\n            await this.props.currentUser.refreshTokens();\r\n            let result = await axios({\r\n              method: method,\r\n              url: url,\r\n              headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n              data: data\r\n            });\r\n            if (result.status === 200) {\r\n              return result\r\n            }\r\n            else {\r\n              this.setState({ isError: true })\r\n            }\r\n\r\n          }\r\n          throw error;\r\n        }\r\n      } catch (ex) {\r\n        console.log(\"ERROR:\", ex);\r\n        this.setState({ isError: true })\r\n      }\r\n    }\r\n    getRedirectQueryString = function (redirectTo) {\r\n      let qs = { redirectTo };\r\n      return `?${queryString.stringify(qs)}`;\r\n    }\r\n    render() {\r\n      const { currentUser: userObj } = this.props;\r\n      return (\r\n        this.state.isError ? <Redirect to={`/guest/login${this.getRedirectQueryString(this.props.location.pathname)}`} /> : <Component loggedInUserObj={userObj} authenticatedApiCall={this.makeAuthenticatedAPICall} {...this.props} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst AuthenticatedPage = () => Component => {\r\n\r\n  return withUser(withRouter(tieAuthorization(Component)));\r\n\r\n}\r\n\r\nexport default AuthenticatedPage;\r\n\r\n","import React from 'react';\nimport {Checkbox,FormControlLabel, FormHelperText} from '@material-ui/core';\nimport {getIn} from 'formik'\n\nexport default function ({field,form,name,helperText,error,checkboxProps,displayErrorMessage =true,...otherProps})\n{\n    const checkProps = checkboxProps ? checkboxProps:{};\n    const {checked,name:cbname,onChange,onBlur,...otherCheckBoxProps} = checkProps;\n    const changeHandler = (event,checked) =>\n    {\n        form.setFieldValue(field.name,checked);\n        if(onChange)\n        {\n            onChange(event,checked);\n        }\n    }\n    const blurHandler = (event) =>\n    {\n        form.setFieldTouched(field.name);\n        if(onBlur)\n        {\n            onBlur(event);\n        }\n    }\n    const touch = getIn(form.touched, field.name);\n    const errorText = getIn(form.errors, field.name);\n\n    return(\n        <>\n        <FormControlLabel control = {\n        <Checkbox name={field.name} checked={field.value} onChange = {changeHandler} onBlur={blurHandler} {...otherCheckBoxProps}  />} {...otherProps}/>\n                        {displayErrorMessage ? <FormHelperText error = {Boolean(touch && errorText)}>{(touch && errorText)|| helperText}</FormHelperText>: helperText && <FormHelperText> {helperText} </FormHelperText>}\n                        </>\n\n    )\n    \n}","import React from 'react';\r\nimport AuthenticatedPage from \"../AuthenticatedPage\";\r\nimport { withStyles, InputAdornment, Button, Typography } from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport CardBody from \"../../components/Card/CardBody.jsx\";\r\nimport CardFooter from \"../../components/Card/CardFooter.jsx\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { string, object, boolean, ref } from 'yup';\r\nimport FormikTextField from '../../components/FormikValidatedComponents/TextField';\r\nimport { withTranslation } from 'react-i18next';\r\nimport GridContainer from '../../components/Grid/GridContainer';\r\nimport GridItem from '../../components/Grid/GridItem';\r\nimport { Helmet } from \"react-helmet\";\r\nimport ErrorDialog from '../../components/ErrorDialog';\r\nimport FormikCheckBox from '../../components/FormikValidatedComponents/CheckBox';\r\n\r\nconst styles = theme => ({\r\n    primaryBtn: {\r\n        color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, width: \"50%\", borderRadius: \"25px\", padding: \"10px\", marginTop: \"-35px\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder\r\n        }\r\n    },\r\n    errorBtn: { color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, borderRadius: \"50px\", margin: \"8px 0\", textAlign: \"right\", padding: \"6px 17px\", fontWeight: \"400\", lineHeight: \"1.42857143\", '&:hover': { backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder } },\r\n    TermsCondition: { color: \"#1a8eeb\", textDecoration: \"underline\", backgroundColor: \"transparent\", border: \"none\", textAlign: \"left\", cursor: \"pointer\", fontSize: \"16px\", padding: \"1px 10px\" },\r\n    fntSz_16: { fontSize: \"16px\" },\r\n    loginSuccess: { fontSize: \"18px\", fontWeight: \"500\", marginBottom: \"15px\" },\r\n    login: { width: \"410px\", marginLeft: \"37%\", marginTop: \"11%\", [theme.breakpoints.down('md')]: { marginLeft: 0, paddingTop: '15px' } },\r\n    padTop: { padding: \"0 40px\", paddingTop: \"40%\", color: \"#fff\" },\r\n    clrWhite: { color: \"#fff !important\", },\r\n    fntSze20: { fontSize: \"18px !important\" },\r\n    LoginHeading: { fontSize: \"30px !important\", fontWeight: \"900 !important\", color: \"rgba(0, 0, 102, 1) !important\" },\r\n    LoginSubHeading: { fontSize: \"18px !important\", color: \"rgba(109, 111, 123, 1)  !important\", textAlign: \"left\", lineHeight: \"24px  !important\" },\r\n    cardFooter: { justifyContent: \"flex-end\", padding: 0, margin: \"30px 0 20px\" },\r\n    icnColor: { cursor: \"pointer\" },\r\n    inputItem: { width: \"100%\", marginBottom: \"15px\", [theme.breakpoints.down('md')]: { width: \"90%\" } },\r\n    cardHeading: { paddingBottom: \"10px\", textAlign: \"center\", fontSize: \"25px\", color: \"green\" }\r\n\r\n\r\n});\r\n\r\nclass FirstTimeLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const { t } = this.props;\r\n        this.formikValidation = object().shape({\r\n            password: string().required(\"This fiels is required.\").min(8, \"Password must be 8 character log.\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#_?&^+=-])[A-Za-z\\d$@$!%*#_?&^+=-]{8,}$/, \"Passqord condition.\"),\r\n            cnfpassword: string().required(\"This fiels is required.\").oneOf([ref('password')], \"Confirm password is not matching.\"),\r\n        });\r\n        this.state = {\r\n            resetPassworSuccess: true, language: this.props.i18n.language, unauthenticated: false,\r\n            password: \"password\", showPassword: true, confPassword: \"password\", showCnfPassword: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ((localStorage.getItem(\"accessToken\") == null) || (localStorage.getItem(\"refreshToken\") == null)) {\r\n            this.props.history.push(`../login`)\r\n        }\r\n    }\r\n    handleSubmit = async (values, { setSubmitting }) => {\r\n        await this.props.authenticatedApiCall('post', '/api/providerauthservice/changePassword', {\r\n            password: values.password,\r\n            cnfpassword: values.cnfpassword\r\n        }).then(response => {\r\n            console.log(\"response\", response)\r\n            setSubmitting(false);\r\n            if (response.data.status === 1) {\r\n                localStorage.removeItem(\"accessToken\");\r\n                localStorage.removeItem(\"refreshToken\")\r\n                this.setState({ resetPassworSuccess: false })\r\n            } else if (response.data.status === 0) {\r\n                this.setState({ unauthenticated: true })\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ unauthenticated: true })\r\n            setSubmitting(false);\r\n            console.log(error);\r\n        });\r\n    }\r\n    //handle dismissDialog\r\n    dismissDialog = () => {\r\n        this.setState({ resetPassworSuccess: true });\r\n        this.props.history.replace(`../login`)\r\n    }\r\n    logout = async () => {\r\n        localStorage.removeItem(\"__warningPopShownForSession\")\r\n        localStorage.removeItem(\"getAccountId\")\r\n        localStorage.removeItem(\"UserAuth\")\r\n        localStorage.removeItem(\"UserObject\")\r\n\r\n        await this.props.authenticatedApiCall('get', '/api/providerauthservice/signout', null).then(response => {\r\n            if (response.status == 200) {\r\n                this.props.history.push('/public');\r\n            }\r\n        })\r\n    }\r\n    handleFirstTimeLogin = () => {\r\n        this.setState({ unauthenticated: false });\r\n        this.props.history.push('./guest')\r\n    }\r\n    handleShowPassword = () => {\r\n        this.setState({ password: \"text\", showPassword: false })\r\n    }\r\n    handleHidePassword = () => {\r\n        this.setState({ password: \"password\", showPassword: true })\r\n    }\r\n    handleShowConfPassword = () => {\r\n        this.setState({ confPassword: \"text\", showCnfPassword: false })\r\n    }\r\n    handleHideConfPassword = () => {\r\n        this.setState({ confPassword: \"password\", showCnfPassword: true })\r\n    }\r\n    //handle Term And Condition\r\n    handleTermCondition = async () => {\r\n        window.open('../termAndCondition');\r\n    }\r\n\r\n    //handle Privacy Policy \r\n    handlePrivacyPolicy = () => {\r\n        window.open('../privacyPolicy');\r\n    }\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        var firstTimeLoginButton = [<Button className={classes.errorBtn} onClick={this.handleFirstTimeLogin}>ok</Button>]\r\n        var HeaderText = \"Unauthentication\";\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>\r\n                        FirstTimeLogin\r\n                    </title>\r\n                </Helmet>\r\n                <div key={this.props.i18n.language}>\r\n                    <GridContainer style={{ backgroundColor: \"#fff\", marginBottom: \"25px\" }}>\r\n                        <GridItem lg={12} md={12} sm={12} xs={12}>\r\n                            <div className={classes.login}>\r\n                                {(this.state.resetPassworSuccess ? <Formik initialValues={{ password: \"\", cnfpassword: \"\", acceptTerms: false, termCondition: false, acceptTerms:false }} onSubmit={this.handleSubmit} validationSchema={this.formikValidation}\r\n                                >\r\n                                    {(props) => (\r\n                                        <Form>\r\n                                            <Typography className={classes.cardHeading}>First Time Reset Password.</Typography>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Enter your New Password.\"\r\n                                                onChange={this.handleChange}\r\n                                                name=\"password\"\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                className={classes.inputItem + \" \" + \"selectstyle\"}\r\n                                                InputProps={{\r\n                                                    type: this.state.password,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showPassword ? <VisibilityIcon onClick={this.handleShowPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHidePassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <p>Password rules <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>Password must be 8 character long.</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}></span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>123</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>@!$%^*()</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>≠ email</span></p>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Confirm your password.\"\r\n                                                fullWidth\r\n                                                name=\"cnfpassword\"\r\n                                                variant=\"filled\"\r\n                                                className={classes.inputItem + \" \" + \"selectstyle\"}\r\n                                                InputProps={{\r\n                                                    type: this.state.confPassword,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showCnfPassword ? <VisibilityIcon onClick={this.handleShowConfPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHideConfPassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <div>\r\n                                            </div>\r\n                                            <Field\r\n                                                name=\"acceptTerms\"\r\n                                                component={FormikCheckBox}\r\n                                                checkboxProps={{ color: \"secondary\" }}\r\n                                                className=\"firstLoginCheck\"\r\n                                                label={<div><span className={classes.fntSz_16}>Accept the</span><button type=\"button\" className={classes.TermsCondition} onClick={this.handleTermCondition}>{\"Term&Condition\"}</button>And\r\n                                                <button type=\"button\" className={classes.TermsCondition} onClick={this.handlePrivacyPolicy}>Policy Policy</button>\r\n                                                </div>}\r\n                                            />\r\n                                            <div>\r\n                                                <div style={{ textAlign: \"center\", marginBottom: \"30px\" }}> <br /><br />\r\n                                                    <Button disabled={!props.values.acceptTerms } type=\"submit\" className={classes.primaryBtn} size=\"small\" > Confirm </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n\r\n                                </Formik> : <Card style={{ boxShadow: \"none\" }}>\r\n                                        <CardBody>\r\n                                            <Typography className={classes.LoginHeading}>Successfull.</Typography><br />\r\n                                            <Typography variant=\"h4\" color=\"inherit\" className={classes.loginSuccess}>Your password has been updated successfully.</Typography>\r\n                                        </CardBody>\r\n                                        <br />\r\n                                        <CardFooter className={classes.cardFooter} >\r\n                                            <Button className={classes.primaryBtn} size=\"small\" onClick={this.dismissDialog}>\r\n                                                Login\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </Card>)}\r\n                            </div>\r\n                        </GridItem>\r\n\r\n                    </GridContainer>\r\n                </div>\r\n                {(this.state.unauthenticated ? <ErrorDialog successButton={firstTimeLoginButton} HeaderText={HeaderText} dismiss={this.handleFirstTimeLogin} /> : \"\")}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AuthenticatedPage()(withStyles(styles, { withTheme: true })(FirstTimeLogin)));\r\n"],"sourceRoot":""}